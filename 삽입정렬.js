//필요할 때만 정렬한다. 그래서 O(n^2)지만 실제로는 특정 조건에서 가장 빠르다
//원소들의 틈바구니 혹은 맨 앞 맨 뒷자리에 공백을 만들어놓고 가장 적절한 위치에 끼워넣는다.
//원소들의 틈바구니는 맨 앞부터 탐색하면서 지금 삽입하려는 수보다 큰 수를 발견하면 바로 왼쪽에 끼워넣는다.
//계속 돌다가 큰 수를 발견하면 자리를 바꾸고 바로 멈춘다는 것에서 속도를 보장할 수 있음
//사실상 예시 어레이로 다시 새로운 어레이를 만드는 느낌

let arr = [1,10,5,8,7,6,4,3,2,9]

function insertSort(arr){
    for(let i = 1;i < arr.length;i++){
        j=i
        while(j>0&&arr[j-1]>arr[j]){
            temp = arr[j]
            arr[j] = arr[j-1]
            arr[j-1] = temp
            j--
        }
    }
}

insertSort(arr)

console.log(arr)
